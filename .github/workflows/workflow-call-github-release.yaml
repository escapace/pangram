on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      environment:
        required: true
        type: string
      version:
        required: true
        type: string
      node-version:
        required: true
        type: string
      pnpm-version:
        required: true
        type: string

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
      - name: install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false
      - name: get pnpm store directory
        id: pnpm-store-path
        run: |
          echo "value=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store-path.outputs.value }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store
      - name: install dependencies
        run: pnpm install
      - name: build
        run: pnpm run build
      - name: release
        if: inputs.environment == 'production'
        run: |
          cat << EOF > "$HOME/.npmrc"
            @escapace:registry=https://npm.pkg.github.com/
            //npm.pkg.github.com/:_authToken=$GITHUB_TOKEN
          EOF
          pnpm run release ${{ inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: github release
        run: |
          if [[ "${{ inputs.environment }}" == "staging" ]]; then
            pnpm exec changelogithub --prerelease
          fi

          if [[ "${{ inputs.environment }}" == "production" ]]; then
            pnpm exec changelogithub
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
